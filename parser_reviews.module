<?php

/**
 * @file
 * Custom module for displaying contact information.
 * (c) Mirsaitov
 * 
 * @author Menshikova
 */
require 'php_scrapper_goutte/src/goutte_requests.php';

/**
 * Implements hook_help().
 */
function parser_reviews_help($path, $arg) {
  switch ($path) {
    case 'admin/help#parser_reviews':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Парсер отзывов со страницы <a href="@yandex-map">Яндекс карты</a> позволяет брать последние 50 опубликованныз отзывов.', array('@yandex-map' => 'https://yandex.ru/maps/org/forvard_avto_lada_ofitsialny_diler/1112596902/reviews/?from=tabbar&ll=73.420619%2C61.265078&source=serp_navig&z=8')) . '</p>';
      
      return $output;   
  }
}


/**
 * Implements hook_block_info().
 */

function parser_reviews_block_info() {
  $blocks = array();
  $blocks['block_parser_reviews'] = array(  //defining a block called 'block_parser_reviews'
    'info' => t('Парсер отзывов'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}


/**
 * Implements hook_block_configure().
 */

 function parser_reviews_block_configure($delta = '') {
  $form = array();
  $url = "https://yandex.ru/maps/org/forvard_avto_lada_ofitsialny_diler/1112596902/reviews/?from=tabbar&ll=73.420619%2C61.265078&source=serp_navig&z=8";
  
  switch($delta) {
    case 'block_parser_reviews' :
      
      $form['settings'] = array(
        '#type' => 'fieldset',
        '#title' => t('Settings'),
        '#collapsible' => TRUE, 
        '#collapsed' => FALSE,  
      );      

      $form['settings']['url_parser_reviews'] = array(
        // '#type' => 'textfield',
        '#type' => 'textarea',
        '#title' => t('URL-страницы'),
        '#required' => TRUE,
        '#default_value' => variable_get('url_parser_reviews', $url),
      );

      $form['settings']['rating_parser_reviews'] = array(
        '#type' => 'select',
        '#title' => t('Минимальный рейтинг'),
        '#default_value' => variable_get('rating_parser_reviews', 5),
        '#options' => drupal_map_assoc(array(
          1,
          2,
          3,
          4,
          5,
        )),
      );

      $form['settings']['update_parser_reviews'] = array(
        '#type' => 'checkbox',
        '#title' => t('Обновить отзывы'),
        '#default_value' => variable_get('update_parser_reviews', false),
      );

      $form['settings']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save')
      );

      break;
  }
  return $form;
}


/**
 * Implements hook_block_save
 */

 function parser_reviews_block_save($delta = '', $edit = array()) {
  if ($delta == 'block_parser_reviews') {
 
    variable_set('url_parser_reviews', $edit['url_parser_reviews']);
    variable_set('rating_parser_reviews', $edit['rating_parser_reviews']);
    variable_set('update_parser_reviews', $edit['update_parser_reviews']);
  }

  if (strlen($edit['url_parser_reviews']) > 0 ) {
    $newReviews = getReviewsYandexMap($edit['url_parser_reviews']);
    

    $query = db_select('node', 'n');
    $query->innerJoin('field_data_field_date_created_review', 'dcr', 'n.vid = dcr.entity_id'); 
    $query->fields('n', array('title'));
    $query->fields('dcr', array('field_date_created_review_value'));
    $resQuery = $query->execute()->fetchAll();
    $resQuery = convToArray($resQuery);

    foreach ($newReviews as $key => $nd) { 
      //  echo $nd["title"].":".$nd["date"].";"."\n";
        if (!in_array(array("title" => $nd["title"], "field_date_created_review_value" => $nd["date"]), $resQuery) ) {
              addNodeReview($nd);
            };
      }
    }


}
 

/*
function getNewReview($newReviews) {
  
  $index = 0;
  $newNodes = [];

  $query = db_select('node', 'n');
  $query->innerJoin('field_data_field_date_created_review', 'dcr', 'n.vid = dcr.entity_id'); 
  $query->fields('n', array('title'));
  $query->fields('dcr', array('field_date_created_review_value'));
  $resQuery = $query->execute()->fetchAll();

  dpm($newReviews[0]);
  dpm($resQuery[0]);



  foreach ($newReviews as $key => $nd) { 
    if (! in_array(
      array("title" -> $nd["title"], 
            "field_date_created_review_value" -> $nd["date"]
          ), 
            $resQuery)
    ) {
      $newNodes [] = $nd;
    } 
  }



  return $newNodes;
}


*/

function parser_reviews_block_view($delta='') {
  $block = array();
    if($delta == 'block_parser_reviews'){
 
      $items = array();
      $reviews = array();
 
      // URL
      if(variable_get('url_parser_reviews')){
        $items[] = variable_get('url_parser_reviews');
      };
 
      // Рейтинг
      if(variable_get('rating_parser_reviews')){
        $items[] = variable_get('rating_parser_reviews');
      }

      // Обновить
      if(variable_get('update_parser_reviews')){
        $items[] = variable_get('update_parser_reviews');
      }

      $reviews[] = variable_get('res_command');

     
      $block["subject"] = "test title";
      $block["content"] = variable_get('rating_parser_reviews');



    
    }
  return $block;
}


function addNodeReview($review, $nid = null) {

  dvm($review);

  $node = new stdClass();
  $node->type = 'reviews_yandex_map';
  node_object_prepare($node);
  $node->title = $review['title'];
  $node->field_url_avatar_author_review['und'][0]['value'] = $review['imgSrc'];
  $node->field_url_link_author_review['und'][0]['value'] = $review['link'];
  
  $node->body[LANGUAGE_NONE][0]['value'] = $review['text'];
  $node->body[LANGUAGE_NONE][0]['summary'] = '';
  $node->body[LANGUAGE_NONE][0]['format'] = 'full_html';

  // $node->field_text_review['und'][0]['value'] = $review['text'];
  $node->field_rating_review['und'][0]['value'] = $review['rating'];
  $node->field_date_created_review['und'][0]['value'] = $review['date'];
  $node->language = LANGUAGE_NONE; 

  node_save($node);
};



function getUrl($url){
  $pattern = "/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&@#\/%?=~_|!:,.;]*[-a-z0-9+&@#\/%=~_|]/i";

  preg_match($pattern, $url, $matches);
  dpm($matches);

}


function convToArray($arrayNodes) {
  $result = array();
  foreach ($arrayNodes as $object)
  {
     $result[] = (array) $object;
  }
  return $result;
};




function changeStatusPublishingNode($rating){
  //$nodes = node_load_multiple($nids);
  $type = "reviews_yandex_map";
  $nodes = node_load_multiple(array(), array('type' => $type)); 
  foreach ($nodes as $node) {
    $node->status = 1;
    node_save($node);
 }
}


